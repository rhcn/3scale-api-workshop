---
- name: Make sure we go back to default project
  shell: "oc project default"

- name: Create registry secret
  shell: "oc create secret docker-registry 3scale-registry-auth2   --docker-server=registry.redhat.io   --docker-username="11543489|3scale"   --docker-password="eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJkNTIzNGU3ODc2YTI0MzE3YmE2ZTkxZjU1ZTBjYTMyZCJ9.qm74_sblFl16p7ItZ20f437672soBjSxe6jB-ZMqTn9Fn0HngvhHFwWCpWayINehi-cpseugsv1IO0Sac2PmLTYk7oSG0NyHp2fbFqZSX2gl1gMRB4wdCSt5945JWurapErpyT8soen-qY3DO3ajAK7S8i69pxRr6H0Yd5wmd9s5LQyHaUafP0E3Cw1kkqz833E_tH8WCxAope9FrA_3Vf91DU6NvC7Y_4JVlQ2Z4rEKVThxfPownF8XsOdgrSoorVDjmOuPeQxwFKYM6Qqy-Ro17H5JoG8pJAEA54cZGo9khObFlSoPMjz4bfWio8JB8MOzajbuee5Pg1zhklGiU50bXmu70EXS16WwS3yYehpkjRLoR5_iQRHP8FYpZmm1fWu9jT74rc6mShhL9K9Mq5L64SPDMInyjtQ0o5p_5mFClul82S3ocKAioBBcCVEt0OMSm9M0oYAevI3BxscbpH1-xQ6qTDfD1ui95FH2G79MJZnWX9x-msUq4GcfIbVIeq84HNPrGyD8IypGAGWDnhfftXsnFKa9PWkW0mIHGOCVFjlwQ22eu_Up_B0w0fimrRqImw-Rdb71nhf6aasZJKGt9DW_VpIJSRjmogIm7JSnFUUvoJMZuVJPuRqTWvxzewiBFigtFEBye87e6t015Xr-BzzyOtQlDSBb9mg3AgE""

- name: Create the 3scale app
  shell: "oc new-app -f https://raw.githubusercontent.com/3scale/3scale-amp-openshift-templates/2.6.0.GA/amp/amp.yml \
  --param WILDCARD_DOMAIN={{ ocp_apps_domain }} --param ADMIN_PASSWORD=password --param WILDCARD_POLICY=Subdomain \
  --param ADMIN_ACCESS_TOKEN=admintoken --param MASTER_PASSWORD=password --param MASTER_ACCESS_TOKEN=mastertoken -n {{ namespace }}"
  when: configure_only == 'false'

- name: Wait until 3scale API is available 
  uri: 
    url: https://master-admin.{{ ocp_apps_domain }}
    method: HEAD
    validate_certs: no
  register: wait_threescale_result
  until: wait_threescale_result is succeeded
  ignore_errors: yes
  retries: 10
  delay: 60
  when: create_tenants

- name: Create tenants
  include_tasks: ./create-tenants.yml
  with_sequence: start=1 end={{ usersno }} format=user%d
  when: create_tenants

- name: Create apikey service
  include_tasks: ./create-service.yml
  vars:
    admintoken: 'admintoken'
    account_id: '3'
    name: 'Location API'
    backend_version: '1'
    system_name: 'location-api'
    proxy_config: 
      production_endpoint: 'https://location-api.amp.{{ ocp_apps_domain }}:443'
      staging_endpoint: 'https://location-api-staging.amp.{{ ocp_apps_domain }}:443'
      backend_endpoint: 'http://location-service-{{ backend_project }}.{{ ocp_apps_domain }}:80'
    application_plan:
      name: 'Simple'
      system_name: 'simple'
    app_config:
      id: 'www-app'
      name: 'Webapp'
      description: 'Simple WebApp'

- name: Get SSO Token Longer Lifespan
  shell: "curl --insecure -X POST 'https://secure-sso-{{sso_project}}.{{ocp_apps_domain}}/auth/realms/master/protocol/openid-connect/token' \
  -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=keyadmin' -d 'password=keypassword' -d 'grant_type=password' -d 'client_id=admin-cli'"
  register: token_text
  when: TKN is undefined

- set_fact: TKN={{ (token_text.stdout | from_json).access_token }}
  when: TKN is undefined

- name: Get id for 3scale-client
  shell: "curl --insecure 'https://secure-sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/threescale/clients' \
  -H 'Content-Type: application/json' -H 'Authorization: Bearer {{TKN}}'"
  register: clients_text

- set_fact: IdClientAdmin={{ (clients_text.stdout | from_json | json_query(query)) }}
  vars:
    query: "[?clientId=='3scale-admin'] | [0].id"

- debug: var=IdClientAdmin

- name: Get client secret
  shell: "curl --insecure 'https://secure-sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/threescale/clients/{{ IdClientAdmin }}/client-secret' \
  -H 'Content-Type: application/json' -H 'Authorization: Bearer {{TKN}}'"
  register: secret_text

- set_fact: client_secret={{ (secret_text.stdout | from_json).value }}

- debug: var=client_secret

- name: Create sso service
  include_tasks: ./create-service.yml
  vars:
    admintoken: 'admintoken'
    account_id: '3'
    name: 'SSO Location API'
    backend_version: 'oidc'
    system_name: 'location-sso'
    proxy_config: 
      production_endpoint: 'https://location-sso.amp.{{ ocp_apps_domain }}:443'
      staging_endpoint: 'https://location-sso-staging.amp.{{ ocp_apps_domain }}:443'
      backend_endpoint: 'http://location-service-{{ backend_project }}.{{ ocp_apps_domain }}:80'
      sso_endpoint: 'http://3scale-admin:{{ client_secret }}@sso-{{ sso_project }}.{{ ocp_apps_domain }}/auth/realms/threescale'
    application_plan:
      name: 'Secure'
      system_name: 'secure'
    app_config:
      id: 'www-secured'
      name: 'Secured App'
      description: 'SSO Secured App'
      redirect_uri: 'http://www-{{ backend_project }}.{{ ocp_apps_domain }}/*'

- name: Get id for client 'www-secured'
  uri:
    url: 'https://secure-sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/threescale/clients'
    return_content: yes
    headers:
      Authorization: 'Bearer {{TKN}}'
    validate_certs: no
  register: client_text
  until: ("www-secured" in client_text.content)
  retries: 20
  delay: 30

- set_fact: IdClientApp={{ (client_text.content | from_json | json_query(query)) }}
  vars:
    query: "[?clientId=='www-secured'] | [0].id"

- debug: var=IdClientApp

- name: Update the rh sso app
  uri: 
    url: "https://secure-sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/threescale/clients/{{IdClientApp}}"
    method: PUT
    return_content: yes
    headers:
      Content-Type: "application/json"
      Authorization: 'Bearer {{TKN}}'
    body: '{ "clientId": "www-secured", "publicClient" : "true", "rootUrl": "http://www-{{ backend_project }}.{{ ocp_apps_domain }}", "baseUrl": "/" }'
    body_format: json
    validate_certs: no
    status_code: 204
  register: update_app_result

- debug: var=update_app_result

- name: Make sure we go back to default project
  shell: "oc project default"
